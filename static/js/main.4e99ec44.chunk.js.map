{"version":3,"sources":["component/dynamic-image/dynamic-image.style.js","component/dynamic-image/dynamic-image.component.jsx","component/link-button/link-button.style.js","component/top-menu/top-menu.style.js","component/top-menu/top-menu.component.jsx","config.js","store/cat/list.constant.js","store/cat/favourite.constant.js","store/cat/favourite.action.js","store/cat/vote.constant.js","component/home/home.style.js","component/home/home.component.jsx","store/cat/list.action.js","store/cat/vote.action.js","component/upload/upload.style.js","component/upload/upload.form.js","component/upload/upload.component.jsx","component/purring-cats/purring-cats.component.jsx","store/cat/favourite.reducer.js","store/cat/list.reducer.js","store/cat/vote.reducer.js","store/cat/index.js","store/reducer.js","store/index.js","index.jsx"],"names":["StyledDynamicImage","styled","div","image","DynamicImage","Link","StyledTopButton","Button","StyledTopMenu","nav","ImageTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Tooltip","TopMenu","useState","handleClick","e","name","target","console","log","navigate","title","variant","onClick","API_URL","API_KEY","INIT_LIST","INIT_FAVOURITE","UPDATE_FAVOURITE","updateFavouriteAction","imageId","favouriteId","type","constant","payload","INIT_VOTE","UPDATE_VOTE","StyledCatAction","StyledCatCard","StyledCatList","Home","dispatch","useDispatch","useSelector","cat","list","favourite","vote","catImagelist","favouriteList","voteList","config","headers","urlFavourite","urlVote","useEffect","getCatResult","a","result","url","get","response","responseStatusType","String","status","slice","toast","error","data","message","getFavouriteResult","getVoteResult","handleVote","image_id","value","voteObject","remove","id","post","postVote","map","catImage","find","fav","voteIdUp","voteIdDown","Fab","size","aria-label","ThumbUp","ThumbUpOutlined","ThumbDown","ThumbDownOutlined","favouriteObject","postFavourite","Favorite","FavoriteBorder","StyledUploadFormGrid","StyledUploadPreviewImage","src","StyledUploadSubmitButton","StyledUploadButton","StyledTextField","Field","TextField","initialValues","file","validationSchema","Yup","shape","required","Upload","setImage","onSubmit","values","formData","FormData","append","success","original_filename","getResult","isSubmitting","isValid","field","form","meta","component","accept","onChange","setFieldValue","files","length","URL","createObjectURL","handleChange","disabled","PurringCats","path","fonts","font","weights","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","initialState","catReducer","combineReducers","state","action","voteId","filter","reducer","configureStore","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","store","app","here","document","querySelector","render"],"mappings":"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","file":"static/js/main.4e99ec44.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const StyledDynamicImage = styled.div`\n  width: 160px;\n  height: 90px;\n  background-image: url(/image/${({ image }) => image});\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n`\n","import React from 'react'\nimport { StyledDynamicImage } from './dynamic-image.style'\n\nconst DynamicImage = ({ image }) => {\n  return (\n    <StyledDynamicImage\n      image={image}\n    />\n  )\n}\n\nexport { DynamicImage }\n","import styled from 'styled-components'\nimport { Link } from '@reach/router'\n\nexport const StyledLink = styled(Link)`\n  color: #fff;\n  background-color: #161718;\n  text-decoration: none;\n  height: 60px;\n  line-height: 60px;\n  padding: 0 2.5rem;\n  border-radius: 1rem;\n  position: relative;\n  overflow: hidden;\n\n  &:hover {\n    &::before {\n      top: -100%;\n    }\n    &::after {\n      top: 0;\n    }\n  }\n\n  &::before,\n  &::after {\n    content: attr(data-label);\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    transition: 250ms;\n    display: flex;\n    justify-content: center;\n  }\n\n  &::before {\n    background-color: #161718;\n    color: #fff;\n  }\n\n  &::after {\n    background-color: #dea9ff;\n    color: #000;\n    top: 100%;\n  }\n`\n","import styled from 'styled-components'\nimport { Button, Tooltip, withStyles } from '@material-ui/core'\n\nexport const StyledTopButton = styled(Button)`\n  && > span {\n    pointer-events: none;\n  }\n`\n\nexport const StyledTopMenu = styled.nav`\n  display: grid;\n  margin: 0 auto;\n  grid-template-columns: repeat(2, auto);\n  grid-gap: 1rem;\n`\n\nexport const StyledTopMenuImageWrapper = styled.div`\n  grid-column: 2/4;\n  grid-row: 1/2;\n`\n\nexport const ImageTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n","import { Button, Typography } from '@material-ui/core'\nimport { navigate } from '@reach/router'\nimport React, { useState } from 'react'\nimport { DynamicImage } from '../dynamic-image'\nimport { LinkButton } from '../link-button/link-button.component'\nimport * as TMS from './top-menu.style'\n\nconst TopMenu = () => {\n  const [image, setImage] = useState('')\n\n  const handleClick = e => {\n    const { name } = e.target\n    console.log(name, e.target)\n    navigate(name)\n  }\n\n  const handleOut = () => {\n    setImage('')\n  }\n\n  return (\n    <TMS.StyledTopMenu>\n      <TMS.ImageTooltip\n        title={<DynamicImage image=\"home.gif\" />}\n      >\n        <TMS.StyledTopButton\n          variant=\"contained\"\n          color=\"primary\"\n          name=\"/\"\n          onClick={handleClick}\n        >\n          Purring Cats\n        </TMS.StyledTopButton>\n      </TMS.ImageTooltip>\n\n      <TMS.ImageTooltip\n        title={<DynamicImage image=\"upload.gif\" />}\n      >\n        <TMS.StyledTopButton\n          variant=\"contained\"\n          color=\"primary\"\n          name=\"/upload\"\n          onClick={handleClick}\n        >\n          Upload\n        </TMS.StyledTopButton>\n      </TMS.ImageTooltip>\n    </TMS.StyledTopMenu>\n  )\n}\n\nexport { TopMenu }\n","export const API_URL = 'https://api.thecatapi.com/v1'\nexport const API_KEY = '6e3d9999-4325-4d3f-a37a-58c1807b45ab'\nexport const CDN = 'https://cdn2.thecatapi.com/images'\n","export const INIT_LIST = '[cat list] INIT_LIST'\n","export const INIT_FAVOURITE = '[cat favourite] INIT_FAVOURITE'\nexport const UPDATE_FAVOURITE = '[cat favourite] UPDATE_FAVOURITE'\n","import * as constant from './favourite.constant'\n\nexport const initFavouriteListAction = list => ({\n  type: constant.INIT_FAVOURITE,\n  payload: { list }\n})\n\nexport const updateFavouriteAction = (imageId, favouriteId) => ({\n  type: constant.UPDATE_FAVOURITE,\n  payload: { imageId, favouriteId }\n})\n","export const INIT_VOTE = '[cat vote] INIT_VOTE'\nexport const UPDATE_VOTE = '[cat vote] UPDATE_VOTE'\n","import styled from 'styled-components'\nimport { Tooltip, withStyles } from '@material-ui/core';\n\nexport const StyledCatAction = styled.div`\n  margin-top: 0.5rem;\n  display: grid;\n  grid-template-columns: 1fr repeat(3, auto);\n  grid-gap: 0.5rem;\n`\n\nexport const StyledCatCard = styled.div`\n  padding-top: 56.25%;\n  background-image: url(${({ image }) => image});\n  background-size: cover;\n  background-position: center center;\n`\n\nexport const StyledCatList = styled.div`\n  display: grid;\n  max-width: 1680px;\n  margin: 1rem auto;\n  grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));\n  grid-gap: 1rem;\n`\n\nexport const ImageTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n","import React, { useEffect } from \"react\";\nimport { get, post, delete as remove } from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Fab } from \"@material-ui/core\";\nimport {\n  Favorite as FavoriteIcon,\n  FavoriteBorder as FavoriteBorderIcon,\n  ThumbDown as ThumbDownIcon,\n  ThumbUp as ThumbUpIcon,\n  ThumbDownOutlined as ThumbDownOutlinedIcon,\n  ThumbUpOutlined as ThumbUpOutlinedIcon,\n} from \"@material-ui/icons\";\n\nimport { API_KEY, API_URL } from \"../../config\";\nimport { initListAction } from \"../../store/cat/list.action\";\nimport {\n  initFavouriteListAction,\n  updateFavouriteAction,\n} from \"../../store/cat/favourite.action\";\nimport { initVoteListAction } from \"../../store/cat/vote.action\";\nimport * as HS from \"./home.style\";\nimport { toast } from \"react-toastify\";\nimport { DynamicImage } from \"../dynamic-image\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [catImagelist, favouriteList, voteList] = useSelector(({ cat }) => [\n    cat.list,\n    cat.favourite,\n    cat.vote,\n  ]);\n\n  const config = {\n    headers: {\n      \"x-api-key\": API_KEY,\n    },\n  };\n  const urlFavourite = `${API_URL}/favourites`;\n  const urlVote = `${API_URL}/votes`;\n\n  useEffect(() => {\n    const getCatResult = async () => {\n      let result = null;\n      const url = `${API_URL}/images?limit=10`;\n\n      try {\n        result = await get(url, config);\n      } catch ({ response }) {\n        result = response;\n      } finally {\n        const responseStatusType = String(result.status).slice(0, 1);\n        if (responseStatusType === \"4\") {\n          toast.error(result.data.message);\n        }\n        if (responseStatusType === \"2\") {\n          // toast.success('Data retreived successfully')\n          dispatch(initListAction(result.data));\n        }\n      }\n    };\n\n    const getFavouriteResult = async () => {\n      let result = null;\n\n      try {\n        result = await get(urlFavourite, config);\n      } catch ({ response }) {\n        result = response;\n      } finally {\n        const responseStatusType = String(result.status).slice(0, 1);\n        if (responseStatusType === \"4\") {\n          toast.error(result.data.message);\n        }\n        if (responseStatusType === \"2\") {\n          // toast.success('Data retreived successfully')\n          dispatch(initFavouriteListAction(result.data));\n        }\n      }\n    };\n\n    const getVoteResult = async () => {\n      let result = null;\n\n      try {\n        result = await get(urlVote, config);\n      } catch ({ response }) {\n        result = response;\n      } finally {\n        const responseStatusType = String(result.status).slice(0, 1);\n        if (responseStatusType === \"4\") {\n          toast.error(result.data.message);\n        }\n        if (responseStatusType === \"2\") {\n          // toast.success('Data retreived successfully')\n          dispatch(initVoteListAction(result.data));\n        }\n      }\n    };\n\n    getCatResult();\n    getFavouriteResult();\n    getVoteResult();\n  }, []);\n\n  const handleVote = (image_id, value, voteObject) => {\n    const postVote = async () => {\n      let result = null;\n      try {\n        if (voteObject) {\n          // if vote object, it means it exists, so we want to delete/remove\n          result = await remove(`${urlVote}/${voteObject.id}`, config);\n        } else {\n          // if vote object is not here, it means it hasn't been created, so we want to add to db\n          result = await post(\n            urlVote,\n            {\n              value,\n              image_id,\n            },\n            config\n          );\n        }\n      } catch ({ response }) {\n        result = response;\n      } finally {\n        toast(result.status);\n      }\n    };\n\n    postVote();\n  };\n\n  const handleFavourite = (image_id, favouriteObject) => {\n    const postFavourite = async () => {\n      let result = null;\n      try {\n        if (favouriteObject) {\n          // must delete from favourite\n          result = await remove(\n            `${urlFavourite}/${favouriteObject.id}`,\n            config\n          );\n        } else {\n          // must add to favourites\n          result = await post(urlFavourite, { image_id }, config);\n        }\n      } catch ({ response }) {\n        result = response;\n      } finally {\n        const responseStatusType = String(result.status).slice(0, 1);\n        if (responseStatusType === \"4\") {\n          toast.error(result.data.message);\n        }\n        if (responseStatusType === \"2\") {\n          if (favouriteObject) {\n            // remove from favourite store\n            dispatch(updateFavouriteAction(image_id));\n          } else {\n            // add to favourite store\n            dispatch(updateFavouriteAction(image_id, result.data.id));\n          }\n        }\n      }\n    };\n\n    postFavourite();\n  };\n\n  return (\n    <div>\n      <h1>Nice list of cats</h1>\n      <HS.StyledCatList>\n        {catImagelist.map((catImage) => {\n          const favouriteId = favouriteList.find(\n            (fav) => fav.image_id === catImage.id\n          );\n          const voteIdUp = voteList.find(\n            (vote) => vote.image_id === catImage.id && vote.value === 1\n          );\n          const voteIdDown = voteList.find(\n            (vote) => vote.image_id === catImage.id && vote.value === 0\n          );\n          // console.group()\n          // console.log(catImage.id)\n          // console.log(favouriteList)\n          // console.log(favouriteId)\n          // console.log(favouriteIdUp, favouriteIdDown)\n          // console.groupEnd()\n\n          const voteId = 2345;\n          return (\n            <div key={catImage.id}>\n              <HS.StyledCatCard image={catImage.url} />\n              <HS.StyledCatAction>\n                <div></div>\n\n                <HS.ImageTooltip\n                  title={<DynamicImage image=\"like.gif\" />}\n                >\n                  <Fab\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"Like this image\"\n                    onClick={() => handleVote(catImage.id, 1, voteIdUp)}\n                  >\n                    {voteIdUp ? <ThumbUpIcon /> : <ThumbUpOutlinedIcon />}\n                  </Fab>\n                </HS.ImageTooltip>\n\n                <HS.ImageTooltip\n                  title={<DynamicImage image=\"dislike.gif\" />}\n                >\n                  <Fab\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"Dislike this image\"\n                    onClick={() => handleVote(catImage.id, 0, voteIdDown)}\n                  >\n                    {voteIdDown ? <ThumbDownIcon /> : <ThumbDownOutlinedIcon />}\n                  </Fab>\n                </HS.ImageTooltip>\n\n                <HS.ImageTooltip\n                  title={\n                    <DynamicImage\n                      image={`${favouriteId ? \"bye\" : \"love\"}.gif`}\n                    />\n                  }\n                >\n                  <Fab\n                    size=\"small\"\n                    color=\"secondary\"\n                    aria-label=\"Add to favourite\"\n                    onClick={() => handleFavourite(catImage.id, favouriteId)}\n                  >\n                    {favouriteId ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n                  </Fab>\n                </HS.ImageTooltip>\n              </HS.StyledCatAction>\n            </div>\n          );\n        })}\n      </HS.StyledCatList>\n    </div>\n  );\n};\n\nexport { Home };\n","import * as constant from './list.constant'\n\nexport const initListAction = list => ({\n  type: constant.INIT_LIST,\n  payload: { list }\n})\n","import * as constant from './vote.constant'\n\nexport const initVoteListAction = list => ({\n  type: constant.INIT_VOTE,\n  payload: { list }\n})\n\nexport const updateVoteAction = (imageId, voteId) => ({\n  type: constant.UPDATE_VOTE,\n  payload: { imageId, voteId }\n})\n","import styled from 'styled-components'\nimport { Button, TextField } from '@material-ui/core'\nimport { Field } from 'formik'\n\nexport const StyledUploadFormGrid = styled.div`\n  margin: 2rem auto;\n  display: grid;\n  grid-template-columns: 1fr repeat(2, auto) 1fr;\n  grid-template-rows: repeat(2, auto);\n  grid-gap: 1rem;\n`\n\nexport const StyledUploadPreviewImage = styled.div`\n  background-image: url(${({ src }) => src});\n  width: 160px;\n  height: 90px;\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  grid-row: 1/3;\n  grid-column: 2/3;\n`\n\nexport const StyledUploadSubmitButton = styled(Button)`\n  grid-row: 2/3;\n  grid-column: 3/4;\n`\n\nexport const StyledUploadButton = styled(Button)`\n  width: 120px;\n  overflow: hidden;\n  position: relative;\n  grid-row: 1/2;\n  grid-column: 3/4;\n`\n\nexport const StyledUploadField = styled(Field)`\n`\n\nexport const StyledTextField = styled(TextField)`\n  && {\n    position: absolute;\n    left: -999px;\n  }\n`\n","import * as Yup from 'yup'\n\nexport const initialValues = {\n  file: null,\n}\n\nexport const validationSchema = Yup.object().shape({\n  file: Yup.mixed().required('Select a file to upload first')\n})\n","import React, { useState } from \"react\";\nimport { Field, Form, Formik } from \"formik\";\nimport { post } from \"axios\";\n\nimport * as US from \"./upload.style\";\nimport { initialValues, validationSchema } from \"./upload.form\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport { toast } from \"react-toastify\";\nimport { navigate } from \"@reach/router\";\n\nconst Upload = () => {\n  const [image, setImage] = useState();\n  const handleChange = (e, setFieldValue) => {\n    const { files } = e.target;\n    setFieldValue(\"file\", e.target.files[0]);\n    setImage(files.length ? URL.createObjectURL(e.target.files[0]) : \"\");\n  };\n\n  const onSubmit = (values) => {\n    const url = `${API_URL}/images/upload`;\n    const formData = new FormData();\n    formData.append(\"file\", values.file);\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"X-Api-Key\": API_KEY,\n      },\n    };\n\n    const getResult = async () => {\n      let result = null;\n      try {\n        // upload image\n        result = await post(url, formData, config);\n        toast.success(\n          `File \"${result.data.original_filename}\" uploaded successfully`\n        )\n        navigate('/')\n      } catch ({ response }) {\n        result = response;\n      } finally {\n        const { status, data } = result;\n        if (status === 400) {\n          toast.error(data.message);\n        }\n      }\n    };\n\n    getResult();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onSubmit}\n        validationSchema={validationSchema}\n      >\n        {({ isSubmitting, isValid }) => (\n          <Form>\n            <US.StyledUploadFormGrid>\n              <US.StyledUploadPreviewImage src={image} />\n              <Field name=\"file\" id=\"file\" type=\"file\">\n                {({ field, form, meta }) => (\n                  <US.StyledUploadButton\n                    variant=\"contained\"\n                    component=\"label\"\n                    color=\"primary\"\n                  >\n                    <span>select file</span>\n                    <US.StyledTextField\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={(e) => handleChange(e, form.setFieldValue)}\n                    />\n                  </US.StyledUploadButton>\n                )}\n              </Field>\n              <US.StyledUploadSubmitButton\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={!isValid}\n              >\n                Upload\n              </US.StyledUploadSubmitButton>\n            </US.StyledUploadFormGrid>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport { Upload };\n","import React from \"react\"\nimport { Router } from '@reach/router'\nimport GoogleFontLoader from 'react-google-font-loader'\nimport { ToastContainer } from \"react-toastify\"\n\nimport { TopMenu } from \"../top-menu\"\nimport { Home } from \"../home\"\nimport { Upload } from \"../upload\"\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst PurringCats = () => {\n  return (\n    <div>\n      <TopMenu />\n      <Router>\n        <Home path=\"/\" />\n        <Upload path=\"/upload\" />\n      </Router>\n      <GoogleFontLoader\n        fonts={[\n          {\n            font: 'Roboto',\n            weights: ['400']\n          }\n        ]}\n      />\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        />\n    </div>\n  )\n}\n\nexport { PurringCats }\n","import * as constant from './favourite.constant'\n\nconst initialState = []\n\nexport const favouriteReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case constant.INIT_FAVOURITE:\n      return action.payload.list\n\n    case constant.UPDATE_FAVOURITE:\n      return action.payload.favouriteId\n        ? [...state, {\n          image_id: action.payload.imageId,\n          id: action.payload.favouriteId\n        }]\n        : state.filter(fav => fav.image_id !== action.payload.imageId)\n\n    default:\n      return state\n  }\n}\n","import * as constant from './list.constant'\n\nconst initialState = []\n\nexport const listReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case constant.INIT_LIST:\n      return action.payload.list\n\n    default:\n      return state\n  }\n}\n","import * as constant from './vote.constant'\n\nconst initialState = []\n\nexport const voteReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case constant.INIT_VOTE:\n      return action.payload.list\n\n    case constant.UPDATE_VOTE:\n      return action.payload.voteId\n        ? [...state, {\n          image_id: action.payload.imageId,\n          id: action.payload.voteId\n        }]\n        : state.filter(fav => fav.image_id !== action.payload.imageId)\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { favouriteReducer } from './favourite.reducer'\nimport { listReducer } from './list.reducer'\nimport { voteReducer } from './vote.reducer'\n\nconst catReducer = combineReducers({\n  vote: voteReducer,\n  favourite: favouriteReducer,\n  list: listReducer,\n})\n\nexport default catReducer\n","import { combineReducers } from 'redux'\nimport catReducer from './cat'\n\nconst reducer = combineReducers({\n  cat: catReducer\n})\n\nexport default reducer\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport rootReducer from './reducer'\n\nconst configureStore = (preloadedState) => {\n  const middlewares = [thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = (typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose)(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./reducer', () => store.replaceReducer(rootReducer))\n  }\n\n  return store\n}\n\nexport default configureStore\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { PurringCats } from \"./component/purring-cats\";\nimport configureStore from \"./store\";\nimport \"./index.css\";\n\nconst store = configureStore();\n\nconst app = (\n  <Provider store={store}>\n    <PurringCats />\n  </Provider>\n);\nconst here = document.querySelector(\"#here\");\n\n// let the fun begin!\nrender(app, here);\n"],"sourceRoot":""}